name: ðŸ”§ Software Engineering Task
description: Create a software engineering task optimized for AI agent assistance
title: "[SWE] "
labels: ["swe", "ai-assisted"]
body:
  - type: markdown
    attributes:
      value: |
        ## Software Engineering Task Template
        This template is optimized for AI agents and GitHub Copilot to provide maximum assistance.
        
  - type: input
    id: task-summary
    attributes:
      label: Task Summary
      description: Brief, clear description of what needs to be implemented
      placeholder: "Implement user authentication system with JWT tokens"
    validations:
      required: true

  - type: textarea
    id: requirements
    attributes:
      label: Detailed Requirements
      description: Specific requirements and acceptance criteria
      placeholder: |
        - User can register with email/password
        - User can login and receive JWT token
        - Protected routes validate JWT tokens
        - Include proper error handling
        - Add unit tests
    validations:
      required: true

  - type: dropdown
    id: complexity
    attributes:
      label: Complexity Level
      description: How complex is this task?
      options:
        - Low (1-2 hours)
        - Medium (2-8 hours)
        - High (1-3 days)
        - Epic (1+ weeks)
    validations:
      required: true

  - type: textarea
    id: technical-context
    attributes:
      label: Technical Context
      description: Existing codebase, frameworks, patterns to follow
      placeholder: |
        - Framework: React/Node.js
        - Database: PostgreSQL
        - Auth library: jsonwebtoken
        - Testing: Jest
        - Existing patterns: /src/auth/

  - type: textarea
    id: ai-context
    attributes:
      label: AI Agent Context
      description: Additional context for AI agents (file locations, dependencies, etc.)
      placeholder: |
        Files to review:
        - /src/models/User.js
        - /src/middleware/auth.js
        
        Dependencies to consider:
        - bcrypt for password hashing
        - express-validator for input validation

  - type: checkboxes
    id: checklist
    attributes:
      label: Definition of Done
      description: What constitutes completion of this task?
      options:
        - label: Code implementation complete
        - label: Unit tests written and passing
        - label: Integration tests passing
        - label: Code reviewed
        - label: Documentation updated
        - label: No security vulnerabilities introduced

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      options:
        - P0 - Critical
        - P1 - High
        - P2 - Medium
        - P3 - Low
    validations:
      required: true